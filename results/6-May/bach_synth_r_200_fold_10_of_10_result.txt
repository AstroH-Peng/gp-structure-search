Experiment all_results for
 datafile = ../data/kfold_data/bach_synth_r_200_fold_10_of_10.mat

 Running experiment:
description = Run all multi D datasets,
data_dir = ../data/kfold_data/,
max_depth = 10,
random_order = False,
k = 1,
debug = False,
local_computation = False,
n_rand = 2,
sd = 4,
max_jobs = 400,
verbose = False,
make_predictions = True,
skip_complete = True,
results_dir = ../results/6-May/,
iters = 100,
base_kernels = SE,RQ,Lin,Per,
zero_mean = False,
verbose_results = False,
random_seed = 0,
period_heuristic = 10,
 


%%%%% Level 0 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 1 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 2 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 3 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 4 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 5 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 6 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 7 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 8 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])

%%%%% Level 9 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-2.275798, lengthscale=3.184427, location=0.629805)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=0.297098, lengthscale=5.392786, location=1.595600)), SumKernel([ ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-11.579381, lengthscale=0.753600, location=-2.580210)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-4.335251, lengthscale=0.233878, location=-3.143525)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-10.211180, lengthscale=-0.200130, location=-2.665330)) ]), ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-10.317409, lengthscale=2.254296, location=2.306306)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-8.901500, lengthscale=-0.012003, location=2.611732)), MaskKernel(ndim=8, active_dimension=3, base_kernel=LinKernel(offset=-14.573055, lengthscale=-1.321946, location=2.485240)) ]) ]) ]), nll=-20.376549, laplace_nle=21.946980, bic_nle=11.176470, noise=[-1.61527915])
