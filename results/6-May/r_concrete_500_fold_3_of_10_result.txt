Experiment all_results for
 datafile = ../data/kfold_data/r_concrete_500_fold_3_of_10.mat

 Running experiment:
description = Run all multi D datasets,
data_dir = ../data/kfold_data/,
max_depth = 10,
random_order = False,
k = 1,
debug = False,
local_computation = False,
n_rand = 2,
sd = 4,
max_jobs = 400,
verbose = False,
make_predictions = True,
skip_complete = True,
results_dir = ../results/6-May/,
iters = 100,
base_kernels = SE,RQ,Lin,Per,
zero_mean = False,
verbose_results = False,
random_seed = 0,
period_heuristic = 10,
 


%%%%% Level 0 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 1 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 2 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 3 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 4 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 5 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 6 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 7 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 8 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])

%%%%% Level 9 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-1.041423, lengthscale=1.645266, location=-2.296562)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.097024, output_variance=-0.501644, alpha=-4.674183)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-3.669482, output_variance=-0.836056, alpha=-5.396588)), MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.349990, lengthscale=1.872666, location=-3.236422)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.543428, output_variance=-0.396749)), ProductKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.750199, lengthscale=1.566490, location=-2.422016)), MaskKernel(ndim=8, active_dimension=2, base_kernel=LinKernel(offset=-13.835137, lengthscale=-1.980316, location=-6.823192)), MaskKernel(ndim=8, active_dimension=6, base_kernel=RQKernel(lengthscale=0.653232, output_variance=-0.602064, alpha=-2.925575)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-1.989189, output_variance=-0.581625, alpha=-3.837161)) ]) ]) ]), nll=91.716237, laplace_nle=150.226956, bic_nle=275.071187, noise=[-2.12441412])
