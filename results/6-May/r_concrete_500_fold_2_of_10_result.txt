Experiment all_results for
 datafile = ../data/kfold_data/r_concrete_500_fold_2_of_10.mat

 Running experiment:
description = Run all multi D datasets,
data_dir = ../data/kfold_data/,
max_depth = 10,
random_order = False,
k = 1,
debug = False,
local_computation = False,
n_rand = 2,
sd = 4,
max_jobs = 400,
verbose = False,
make_predictions = True,
skip_complete = True,
results_dir = ../results/6-May/,
iters = 100,
base_kernels = SE,RQ,Lin,Per,
zero_mean = False,
verbose_results = False,
random_seed = 0,
period_heuristic = 10,
 


%%%%% Level 0 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 1 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 2 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 3 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 4 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 5 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 6 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 7 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 8 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])

%%%%% Level 9 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.395860, lengthscale=1.394710, location=-1.068220)), MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=-0.354691, lengthscale=1.589106, location=-0.644940)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.823799, output_variance=0.321380, alpha=-4.785141)), ProductKernel([ MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-4.727733, output_variance=-0.653347, alpha=-4.550388)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-3.205356, output_variance=1.353484, alpha=-2.697717)) ]) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=0.402217, output_variance=-0.345542, alpha=-2.727344)), ProductKernel([ MaskKernel(ndim=8, active_dimension=5, base_kernel=LinKernel(offset=-0.880206, lengthscale=0.923293, location=-0.796789)), MaskKernel(ndim=8, active_dimension=5, base_kernel=SqExpKernel(lengthscale=-3.887687, output_variance=-1.289509)), MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=-0.933120, output_variance=0.148790)) ]) ]) ]), nll=98.105864, laplace_nle=165.191247, bic_nle=293.959690, noise=[-3.64648817])
