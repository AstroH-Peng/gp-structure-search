Experiment all_results for
 datafile = ../data/kfold_data/r_concrete_500_fold_6_of_10.mat

 Running experiment:
description = Run all multi D datasets,
data_dir = ../data/kfold_data/,
max_depth = 10,
random_order = False,
k = 1,
debug = False,
local_computation = False,
n_rand = 2,
sd = 4,
max_jobs = 400,
verbose = False,
make_predictions = True,
skip_complete = True,
results_dir = ../results/6-May/,
iters = 100,
base_kernels = SE,RQ,Lin,Per,
zero_mean = False,
verbose_results = False,
random_seed = 0,
period_heuristic = 10,
 


%%%%% Level 0 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 1 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 2 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 3 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 4 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 5 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 6 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 7 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 8 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])

%%%%% Level 9 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=LinKernel(offset=-0.422663, lengthscale=1.633439, location=-2.110832)), MaskKernel(ndim=8, active_dimension=3, base_kernel=RQKernel(lengthscale=-2.114079, output_variance=-0.337175, alpha=-4.953866)), MaskKernel(ndim=8, active_dimension=4, base_kernel=RQKernel(lengthscale=-1.017717, output_variance=-0.123124, alpha=-3.596323)), SumKernel([ MaskKernel(ndim=8, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.837856, output_variance=-0.217116)), ProductKernel([ MaskKernel(ndim=8, active_dimension=6, base_kernel=SqExpKernel(lengthscale=1.177358, output_variance=0.460075)), SumKernel([ MaskKernel(ndim=8, active_dimension=1, base_kernel=LinKernel(offset=0.173291, lengthscale=1.058416, location=-1.663119)), MaskKernel(ndim=8, active_dimension=2, base_kernel=SqExpKernel(lengthscale=-1.489732, output_variance=-1.016100)) ]), SumKernel([ MaskKernel(ndim=8, active_dimension=3, base_kernel=SqExpKernel(lengthscale=-0.298226, output_variance=-0.400126)), MaskKernel(ndim=8, active_dimension=7, base_kernel=RQKernel(lengthscale=-2.571860, output_variance=-0.171464, alpha=-3.128686)) ]) ]) ]) ]), nll=93.818966, laplace_nle=158.178403, bic_nle=285.385893, noise=[-2.0831449])
