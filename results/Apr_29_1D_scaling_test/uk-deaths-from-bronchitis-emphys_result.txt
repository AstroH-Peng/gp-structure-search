Experiment all_results for
 datafile = ../data/time_series_unscaled/uk-deaths-from-bronchitis-emphys.mat

 Running experiment:
description = Test the new scaling code,
data_dir = ../data/time_series_unscaled/,
max_depth = 8,
random_order = False,
k = 1,
debug = False,
local_computation = False,
n_rand = 3,
sd = 4,
max_jobs = 400,
verbose = False,
make_predictions = False,
skip_complete = True,
results_dir = ../results/Apr_29_1D_scaling_test/,
iters = 100,
base_kernels = SE,RQ,Per,Lin,Const,
zero_mean = True,
verbose_results = False,
random_seed = 0,
period_heuristic = 5,
 


%%%%% Level 0 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])

%%%%% Level 1 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])

%%%%% Level 2 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])

%%%%% Level 3 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])

%%%%% Level 4 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])

%%%%% Level 5 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])

%%%%% Level 6 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])

%%%%% Level 7 %%%%%

ScoredKernel(k_opt=SumKernel([ ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.019443, output_variance=-0.329468)), MaskKernel(ndim=1, active_dimension=0, base_kernel=ConstKernel(output_variance=6.195821)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.756892, period=-0.606768, output_variance=5.137733)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.683842, period=-0.078252, output_variance=0.077085)) ]), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.297820, period=-0.693964, output_variance=11.420189)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.123231, output_variance=-4.066539, alpha=-7.806835)) ]) ]), nll=1362.055006, laplace_nle=1419.561980, bic_nle=2787.927452, noise=[ 1.42837908])
