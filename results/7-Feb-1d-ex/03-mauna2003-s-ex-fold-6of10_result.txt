Experiment all_results for
 datafile = ../data/1d_extrap_folds/03-mauna2003-s-ex-fold-6of10.mat
 y_dim = 1
 subset = None
 max_depth = 4.000000
 k = 1.000000
 Description = SE, PE, RQ, LN n_rand=3 max_depth=4


%%%%% Level 0 %%%%%

ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.648067, period=-2.002831, output_variance=3.563215)), nll=348.766160, laplace_nle=372.838867, bic_nle=714.902201, noise=[-1.95451662])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-16.867194, period=-1.972046, output_variance=3.303796)), nll=13.301077, laplace_nle=nan, bic_nle=43.972035, noise=[-1.8322161])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.055447, output_variance=0.536396)), nll=-239.429530, laplace_nle=-232.714622, bic_nle=-467.279140, noise=[-2.18747156])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.092568, output_variance=-0.736395, alpha=-1.803686)), nll=-582.875602, laplace_nle=-569.667385, bic_nle=-1148.381324, noise=[-4.56917016])

%%%%% Level 1 %%%%%

ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.648067, period=-2.002831, output_variance=3.563215)), nll=348.766160, laplace_nle=372.838867, bic_nle=714.902201, noise=[-1.95451662])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-16.867194, period=-1.972046, output_variance=3.303796)), nll=13.301077, laplace_nle=nan, bic_nle=43.972035, noise=[-1.8322161])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-5.949815, lengthscale=-0.097797, location=-0.701222)), nll=-201.299575, laplace_nle=-190.229925, bic_nle=-385.229270, noise=[-2.05089071])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.055447, output_variance=0.536396)), nll=-239.429530, laplace_nle=-232.714622, bic_nle=-467.279140, noise=[-2.18747156])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.055449, output_variance=0.536400)), nll=-239.429530, laplace_nle=-232.714620, bic_nle=-467.279140, noise=[-2.18747165])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.176072, output_variance=0.007503)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.030050, output_variance=-0.728892, alpha=-2.055151)) ]), nll=-585.127377, laplace_nle=1798725953389.629883, bic_nle=-1147.094914, noise=[-4.58267675])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.092568, output_variance=-0.736395, alpha=-1.803686)), nll=-582.875602, laplace_nle=-569.667385, bic_nle=-1148.381324, noise=[-4.56917016])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.225428, output_variance=-2.060084, alpha=8.434558)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.922741, output_variance=0.393517, alpha=5.118086)) ]), nll=-619.453951, laplace_nle=nan, bic_nle=-1204.168141, noise=[-4.49668142])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.200009, output_variance=-1.988409, alpha=14.612657)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-9.636625, lengthscale=0.192231, location=-0.704332)) ]), nll=-619.840996, laplace_nle=-597.813691, bic_nle=-1204.942232, noise=[-4.4909323])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.882597, output_variance=0.330015)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.225774, output_variance=-2.058645, alpha=14.243164)) ]), nll=-619.467338, laplace_nle=nan, bic_nle=-1209.984876, noise=[-4.49722951])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.221759, period=-1.885238, output_variance=1.768595)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=3.162101, output_variance=1.032199, alpha=-10.605977)) ]), nll=-765.795337, laplace_nle=2780580.500842, bic_nle=-1502.640872, noise=[-4.22379752])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.142730, period=-1.885388, output_variance=-0.333791)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.241436, output_variance=-0.912985, alpha=-1.408463)) ]), nll=-780.174123, laplace_nle=-750.343014, bic_nle=-1525.608484, noise=[-4.18697569])

%%%%% Level 2 %%%%%

ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.648067, period=-2.002831, output_variance=3.563215)), nll=348.766160, laplace_nle=372.838867, bic_nle=714.902201, noise=[-1.95451662])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-16.867194, period=-1.972046, output_variance=3.303796)), nll=13.301077, laplace_nle=nan, bic_nle=43.972035, noise=[-1.8322161])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.094210, period=-2.289917, output_variance=1.923022)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.742748, period=-5.062908, output_variance=0.367252)) ]), nll=-181.912888, laplace_nle=nan, bic_nle=-329.086014, noise=[-2.02838002])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-5.949815, lengthscale=-0.097797, location=-0.701222)), nll=-201.299575, laplace_nle=-190.229925, bic_nle=-385.229270, noise=[-2.05089071])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.055447, output_variance=0.536396)), nll=-239.429530, laplace_nle=-232.714622, bic_nle=-467.279140, noise=[-2.18747156])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.055449, output_variance=0.536400)), nll=-239.429530, laplace_nle=-232.714620, bic_nle=-467.279140, noise=[-2.18747165])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.128677, period=-1.885195, output_variance=-0.592486)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-3.051331, lengthscale=-4.007730, location=0.205044)) ]), nll=-381.072225, laplace_nle=nan, bic_nle=-727.404690, noise=[-2.69971713])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.110272, period=-1.885206, output_variance=-1.227747)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-0.998307, lengthscale=-1.637249, location=-0.290316)) ]), nll=-383.010892, laplace_nle=-359.899645, bic_nle=-731.282023, noise=[-2.68850715])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-4.616077, period=-1.885035, output_variance=3.415047)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.887983, output_variance=3.850575, alpha=0.142855)) ]), nll=-562.942541, laplace_nle=nan, bic_nle=-1091.145321, noise=[-3.74086497])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.176072, output_variance=0.007503)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.030050, output_variance=-0.728892, alpha=-2.055151)) ]), nll=-585.127377, laplace_nle=1798725953389.629883, bic_nle=-1147.094914, noise=[-4.58267675])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.092568, output_variance=-0.736395, alpha=-1.803686)), nll=-582.875602, laplace_nle=-569.667385, bic_nle=-1148.381324, noise=[-4.56917016])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.225428, output_variance=-2.060084, alpha=8.434558)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.922741, output_variance=0.393517, alpha=5.118086)) ]), nll=-619.453951, laplace_nle=nan, bic_nle=-1204.168141, noise=[-4.49668142])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.200009, output_variance=-1.988409, alpha=14.612657)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-9.636625, lengthscale=0.192231, location=-0.704332)) ]), nll=-619.840996, laplace_nle=-597.813691, bic_nle=-1204.942232, noise=[-4.4909323])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.882597, output_variance=0.330015)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.225774, output_variance=-2.058645, alpha=14.243164)) ]), nll=-619.467338, laplace_nle=nan, bic_nle=-1209.984876, noise=[-4.49722951])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.122677, period=-1.885418, output_variance=-0.455905)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.100004, period=-2.028865, output_variance=1.046223)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=2.185651, output_variance=0.371788, alpha=-0.269404)) ]) ]), nll=-676.874697, laplace_nle=nan, bic_nle=-1301.639752, noise=[-3.79384197])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.221759, period=-1.885238, output_variance=1.768595)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=3.162101, output_variance=1.032199, alpha=-10.605977)) ]), nll=-765.795337, laplace_nle=2780580.500842, bic_nle=-1502.640872, noise=[-4.22379752])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.062327, period=-1.885396, output_variance=-0.326727)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.176222, output_variance=-0.984311, alpha=-1.422220)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.069908, lengthscale=-3.863255, location=2.096776)) ]), nll=-780.386527, laplace_nle=nan, bic_nle=-1508.663413, noise=[-4.15552711])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.041585, period=-1.885401, output_variance=-0.384038)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.190145, output_variance=-1.136924, alpha=-1.489287)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=0.865565, lengthscale=-1.482253, location=-1.109310)) ]), nll=-787.531800, laplace_nle=nan, bic_nle=-1522.953958, noise=[-4.19107007])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.142730, period=-1.885388, output_variance=-0.333791)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.241436, output_variance=-0.912985, alpha=-1.408463)) ]), nll=-780.174123, laplace_nle=-750.343014, bic_nle=-1525.608484, noise=[-4.18697569])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.037161, period=-1.885393, output_variance=-0.771163)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.313623, output_variance=-1.500653, alpha=-1.740432)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=1.506906, output_variance=1.559576, alpha=-1.357176)) ]), nll=-792.502138, laplace_nle=nan, bic_nle=-1532.894634, noise=[-4.14597589])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.205218, output_variance=-0.940998, alpha=-1.744029)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.388834, period=-2.578636, output_variance=-1.035034)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.313620, output_variance=-1.120366, alpha=-5.345121)) ]) ]), nll=-834.071085, laplace_nle=nan, bic_nle=-1616.032528, noise=[-4.55753199])

%%%%% Level 3 %%%%%

ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.648067, period=-2.002831, output_variance=3.563215)), nll=348.766160, laplace_nle=372.838867, bic_nle=714.902201, noise=[-1.95451662])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-16.867194, period=-1.972046, output_variance=3.303796)), nll=13.301077, laplace_nle=nan, bic_nle=43.972035, noise=[-1.8322161])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.094210, period=-2.289917, output_variance=1.923022)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.742748, period=-5.062908, output_variance=0.367252)) ]), nll=-181.912888, laplace_nle=nan, bic_nle=-329.086014, noise=[-2.02838002])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-5.949815, lengthscale=-0.097797, location=-0.701222)), nll=-201.299575, laplace_nle=-190.229925, bic_nle=-385.229270, noise=[-2.05089071])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.055447, output_variance=0.536396)), nll=-239.429530, laplace_nle=-232.714622, bic_nle=-467.279140, noise=[-2.18747156])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.055449, output_variance=0.536400)), nll=-239.429530, laplace_nle=-232.714620, bic_nle=-467.279140, noise=[-2.18747165])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.128677, period=-1.885195, output_variance=-0.592486)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-3.051331, lengthscale=-4.007730, location=0.205044)) ]), nll=-381.072225, laplace_nle=nan, bic_nle=-727.404690, noise=[-2.69971713])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.110272, period=-1.885206, output_variance=-1.227747)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-0.998307, lengthscale=-1.637249, location=-0.290316)) ]), nll=-383.010892, laplace_nle=-359.899645, bic_nle=-731.282023, noise=[-2.68850715])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=6.077812, output_variance=5.717203, alpha=4.731512)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.185030, output_variance=0.204664, alpha=-9.082011)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=8.713994, output_variance=1.862672, alpha=3.306622)) ]) ]), nll=-553.200940, laplace_nle=nan, bic_nle=-1054.292238, noise=[-14.97878352])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-4.616077, period=-1.885035, output_variance=3.415047)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.887983, output_variance=3.850575, alpha=0.142855)) ]), nll=-562.942541, laplace_nle=nan, bic_nle=-1091.145321, noise=[-3.74086497])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=2.569851, output_variance=-2.567810, alpha=-0.567732)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.132646, output_variance=-3.204285, alpha=-8.564996)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=0.395939, lengthscale=-2.737434, location=17.264419)) ]) ]), nll=-581.334685, laplace_nle=nan, bic_nle=-1110.559728, noise=[-4.59965588])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.176072, output_variance=0.007503)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.030050, output_variance=-0.728892, alpha=-2.055151)) ]), nll=-585.127377, laplace_nle=1798725953389.629883, bic_nle=-1147.094914, noise=[-4.58267675])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.092568, output_variance=-0.736395, alpha=-1.803686)), nll=-582.875602, laplace_nle=-569.667385, bic_nle=-1148.381324, noise=[-4.56917016])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.225428, output_variance=-2.060084, alpha=8.434558)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.922741, output_variance=0.393517, alpha=5.118086)) ]), nll=-619.453951, laplace_nle=nan, bic_nle=-1204.168141, noise=[-4.49668142])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.200009, output_variance=-1.988409, alpha=14.612657)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-9.636625, lengthscale=0.192231, location=-0.704332)) ]), nll=-619.840996, laplace_nle=-597.813691, bic_nle=-1204.942232, noise=[-4.4909323])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.882597, output_variance=0.330015)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.225774, output_variance=-2.058645, alpha=14.243164)) ]), nll=-619.467338, laplace_nle=nan, bic_nle=-1209.984876, noise=[-4.49722951])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.122677, period=-1.885418, output_variance=-0.455905)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.100004, period=-2.028865, output_variance=1.046223)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=2.185651, output_variance=0.371788, alpha=-0.269404)) ]) ]), nll=-676.874697, laplace_nle=nan, bic_nle=-1301.639752, noise=[-3.79384197])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.221759, period=-1.885238, output_variance=1.768595)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=3.162101, output_variance=1.032199, alpha=-10.605977)) ]), nll=-765.795337, laplace_nle=2780580.500842, bic_nle=-1502.640872, noise=[-4.22379752])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.062327, period=-1.885396, output_variance=-0.326727)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.176222, output_variance=-0.984311, alpha=-1.422220)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.069908, lengthscale=-3.863255, location=2.096776)) ]), nll=-780.386527, laplace_nle=nan, bic_nle=-1508.663413, noise=[-4.15552711])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.041585, period=-1.885401, output_variance=-0.384038)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.190145, output_variance=-1.136924, alpha=-1.489287)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=0.865565, lengthscale=-1.482253, location=-1.109310)) ]), nll=-787.531800, laplace_nle=nan, bic_nle=-1522.953958, noise=[-4.19107007])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.142730, period=-1.885388, output_variance=-0.333791)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.241436, output_variance=-0.912985, alpha=-1.408463)) ]), nll=-780.174123, laplace_nle=-750.343014, bic_nle=-1525.608484, noise=[-4.18697569])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.037161, period=-1.885393, output_variance=-0.771163)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.313623, output_variance=-1.500653, alpha=-1.740432)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=1.506906, output_variance=1.559576, alpha=-1.357176)) ]), nll=-792.502138, laplace_nle=nan, bic_nle=-1532.894634, noise=[-4.14597589])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.205218, output_variance=-0.940998, alpha=-1.744029)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.388834, period=-2.578636, output_variance=-1.035034)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.313620, output_variance=-1.120366, alpha=-5.345121)) ]) ]), nll=-834.071085, laplace_nle=nan, bic_nle=-1616.032528, noise=[-4.55753199])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.022799, output_variance=-1.558244, alpha=-1.958408)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=0.038026, lengthscale=-1.373235, location=1.430898)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.399552, period=-2.578620, output_variance=-0.923833)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.820499, output_variance=-1.009166, alpha=-5.647704)) ]) ]), nll=-858.071911, laplace_nle=nan, bic_nle=-1646.664299, noise=[-4.53456473])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.120056, output_variance=-2.709286, alpha=-3.065047)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=2.073435, output_variance=3.260201)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=2.032757, period=-2.579302, output_variance=-1.411366)) ]) ]), nll=-851.531663, laplace_nle=nan, bic_nle=-1656.743644, noise=[-4.36935552])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=1.348585, output_variance=2.058686, alpha=0.137865)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=2.575842, output_variance=1.264599)), MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.737099, period=-2.578591, output_variance=-1.277620)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.011505, output_variance=-1.362953, alpha=-6.787206)) ]) ]), nll=-866.568930, laplace_nle=nan, bic_nle=-1669.448299, noise=[-4.50865093])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.333273, output_variance=1.049030)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.405461, period=-2.578608, output_variance=-0.793575)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.257431, output_variance=-0.878907, alpha=-6.014073)) ]) ]), nll=-868.304774, laplace_nle=-861.846458, bic_nle=-1690.289868, noise=[-4.5984619])
