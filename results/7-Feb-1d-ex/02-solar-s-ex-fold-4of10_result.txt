Experiment all_results for
 datafile = ../data/1d_extrap_folds/02-solar-s-ex-fold-4of10.mat
 y_dim = 1
 subset = None
 max_depth = 4.000000
 k = 1.000000
 Description = SE, PE, RQ, LN n_rand=3 max_depth=4


%%%%% Level 0 %%%%%

ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.044309, period=-2.122713, output_variance=-2.308993)), nll=155.960523, laplace_nle=nan, bic_nle=327.146567, noise=[-0.47115576])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-10.681342, lengthscale=1.083023, location=-1.041383)), nll=154.485898, laplace_nle=161.237995, bic_nle=324.197318, noise=[-0.46000447])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.040579, period=-0.475079, output_variance=-1.493489)), nll=153.311524, laplace_nle=164.631330, bic_nle=321.848570, noise=[-0.47668556])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.458235, period=-2.011732, output_variance=-0.437374)), nll=144.735119, laplace_nle=165.447395, bic_nle=304.695760, noise=[-1.40649801])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.119368, period=-3.141010, output_variance=-0.056881)), nll=97.060316, laplace_nle=114.520022, bic_nle=209.346153, noise=[-0.95389575])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.353936, output_variance=0.755275, alpha=9.252901)), nll=68.864503, laplace_nle=nan, bic_nle=152.954527, noise=[-1.0629586])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.425643, output_variance=-0.091215, alpha=0.259209)), nll=68.433812, laplace_nle=77.170935, bic_nle=152.093145, noise=[-1.10009848])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.693913, output_variance=-0.210953)), nll=68.912058, laplace_nle=76.408635, bic_nle=147.974464, noise=[-1.09886087])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.355430, output_variance=0.752233)), nll=68.864358, laplace_nle=75.552449, bic_nle=147.879064, noise=[-1.0628633])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.568622, output_variance=-0.343202, alpha=-1.673409)), nll=44.626339, laplace_nle=55.465930, bic_nle=104.478199, noise=[-1.69362685])

%%%%% Level 1 %%%%%

ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.569130, period=-3.015290, output_variance=-9.842357)), nll=156.985329, laplace_nle=nan, bic_nle=329.196179, noise=[-0.4377744])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.044309, period=-2.122713, output_variance=-2.308993)), nll=155.960523, laplace_nle=nan, bic_nle=327.146567, noise=[-0.47115576])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-10.681342, lengthscale=1.083023, location=-1.041383)), nll=154.485898, laplace_nle=161.237995, bic_nle=324.197318, noise=[-0.46000447])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-12.210354, lengthscale=1.083023, location=-1.041383)), nll=154.485898, laplace_nle=161.237952, bic_nle=324.197318, noise=[-0.46000447])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.040579, period=-0.475079, output_variance=-1.493489)), nll=153.311524, laplace_nle=164.631330, bic_nle=321.848570, noise=[-0.47668556])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.458235, period=-2.011732, output_variance=-0.437374)), nll=144.735119, laplace_nle=165.447395, bic_nle=304.695760, noise=[-1.40649801])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.983055, period=-3.144292, output_variance=-1.280935)), nll=122.623778, laplace_nle=nan, bic_nle=260.473078, noise=[-0.71423578])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.119368, period=-3.141010, output_variance=-0.056881)), nll=97.060316, laplace_nle=114.520022, bic_nle=209.346153, noise=[-0.95389575])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.153704, period=-3.141113, output_variance=-0.073066)), nll=96.612983, laplace_nle=114.323179, bic_nle=208.451488, noise=[-1.04192812])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.353936, output_variance=0.755275, alpha=9.252901)), nll=68.864503, laplace_nle=nan, bic_nle=152.954527, noise=[-1.0629586])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.425643, output_variance=-0.091215, alpha=0.259209)), nll=68.433812, laplace_nle=77.170935, bic_nle=152.093145, noise=[-1.10009848])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.425643, output_variance=-0.091215, alpha=0.259211)), nll=68.433812, laplace_nle=77.170934, bic_nle=152.093145, noise=[-1.10009847])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.693913, output_variance=-0.210953)), nll=68.912058, laplace_nle=76.408635, bic_nle=147.974464, noise=[-1.09886086])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.693913, output_variance=-0.210953)), nll=68.912058, laplace_nle=76.408635, bic_nle=147.974464, noise=[-1.09886087])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.355430, output_variance=0.752233)), nll=68.864358, laplace_nle=75.552449, bic_nle=147.879064, noise=[-1.0628633])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.355431, output_variance=0.752233)), nll=68.864358, laplace_nle=75.552446, bic_nle=147.879064, noise=[-1.06286323])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.136803, period=-2.247277, output_variance=-2.020101)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.454061, output_variance=-0.318001, alpha=-1.792840)) ]), nll=43.252364, laplace_nle=67.344094, bic_nle=116.955770, noise=[-1.68718652])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.992405, period=-2.101339, output_variance=-0.035207)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.452633, output_variance=-0.378409, alpha=-1.591378)) ]), nll=44.387854, laplace_nle=14785719952.956734, bic_nle=114.151578, noise=[-1.66470007])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.073433, period=-2.342506, output_variance=0.235549)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.213864, output_variance=-0.584753, alpha=-1.967426)) ]), nll=41.624944, laplace_nle=73513217106.148758, bic_nle=108.625757, noise=[-1.64297706])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.845228, output_variance=-0.872240)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.723990, output_variance=0.757888, alpha=-3.074281)) ]), nll=42.476392, laplace_nle=2196754.082783, bic_nle=105.253478, noise=[-1.89817053])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.568622, output_variance=-0.343202, alpha=-1.673409)), nll=44.626339, laplace_nle=55.465930, bic_nle=104.478199, noise=[-1.69362685])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.568621, output_variance=-0.343201, alpha=-1.673412)), nll=44.626339, laplace_nle=55.465927, bic_nle=104.478199, noise=[-1.69362679])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.517177, output_variance=0.275204)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.228950, output_variance=-1.136405, alpha=16.783463)) ]), nll=37.025366, laplace_nle=54.584036, bic_nle=99.426602, noise=[-1.66383142])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.546556, period=-2.248612, output_variance=-1.356324)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.776415, output_variance=1.102573, alpha=-0.009769)) ]), nll=34.857026, laplace_nle=118768259773.162628, bic_nle=95.089921, noise=[-1.58614909])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.258312, output_variance=0.173379, alpha=-3.605461)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.230051, lengthscale=-0.660199, location=-1.107295)) ]), nll=-40.218097, laplace_nle=-19.142705, bic_nle=-55.060326, noise=[-4.98044086])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.295807, output_variance=-2.360020, alpha=-3.722323)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-5.260021, lengthscale=-3.243203, location=-1.105983)) ]), nll=-44.058317, laplace_nle=nan, bic_nle=-62.740765, noise=[-7.34635958])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.040020, output_variance=-3.627788, alpha=-4.509550)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341439, lengthscale=-4.858095, location=-1.054272)) ]), nll=-45.204133, laplace_nle=-23.624492, bic_nle=-65.032398, noise=[-8.23206415])

%%%%% Level 2 %%%%%

ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.569130, period=-3.015290, output_variance=-9.842357)), nll=156.985329, laplace_nle=nan, bic_nle=329.196179, noise=[-0.4377744])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.044309, period=-2.122713, output_variance=-2.308993)), nll=155.960523, laplace_nle=nan, bic_nle=327.146567, noise=[-0.47115576])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-10.681342, lengthscale=1.083023, location=-1.041383)), nll=154.485898, laplace_nle=161.237995, bic_nle=324.197318, noise=[-0.46000447])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-12.210354, lengthscale=1.083023, location=-1.041383)), nll=154.485898, laplace_nle=161.237952, bic_nle=324.197318, noise=[-0.46000447])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.040579, period=-0.475079, output_variance=-1.493489)), nll=153.311524, laplace_nle=164.631330, bic_nle=321.848570, noise=[-0.47668556])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.458235, period=-2.011732, output_variance=-0.437374)), nll=144.735119, laplace_nle=165.447395, bic_nle=304.695760, noise=[-1.40649801])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.983055, period=-3.144292, output_variance=-1.280935)), nll=122.623778, laplace_nle=nan, bic_nle=260.473078, noise=[-0.71423578])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.119368, period=-3.141010, output_variance=-0.056881)), nll=97.060316, laplace_nle=114.520022, bic_nle=209.346153, noise=[-0.95389575])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.153704, period=-3.141113, output_variance=-0.073066)), nll=96.612983, laplace_nle=114.323179, bic_nle=208.451488, noise=[-1.04192812])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.978947, lengthscale=-0.154009, location=-1.491879)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-8.379528, lengthscale=-1.139761, location=-0.690233)) ]), nll=68.420810, laplace_nle=84.604661, bic_nle=162.217489, noise=[-1.00983644])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.691911, output_variance=-4.687206)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.339663, lengthscale=-0.169112, location=-75.455333)) ]), nll=68.932813, laplace_nle=nan, bic_nle=158.166322, noise=[-1.09872163])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.364828, output_variance=-3.417669)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.322324, lengthscale=0.171439, location=-77.147258)) ]), nll=68.906282, laplace_nle=nan, bic_nle=158.113258, noise=[-1.06270129])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.053142, output_variance=-1.860711, alpha=8.535154)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.353557, lengthscale=-3.009501, location=-0.551660)) ]), nll=64.211709, laplace_nle=77.526819, bic_nle=153.799287, noise=[-1.07039812])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.353936, output_variance=0.755275, alpha=9.252901)), nll=68.864503, laplace_nle=nan, bic_nle=152.954527, noise=[-1.0629586])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.425643, output_variance=-0.091215, alpha=0.259209)), nll=68.433812, laplace_nle=77.170935, bic_nle=152.093145, noise=[-1.10009848])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.425643, output_variance=-0.091215, alpha=0.259211)), nll=68.433812, laplace_nle=77.170934, bic_nle=152.093145, noise=[-1.10009847])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.693913, output_variance=-0.210953)), nll=68.912058, laplace_nle=76.408635, bic_nle=147.974464, noise=[-1.09886086])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.693913, output_variance=-0.210953)), nll=68.912058, laplace_nle=76.408635, bic_nle=147.974464, noise=[-1.09886087])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.355430, output_variance=0.752233)), nll=68.864358, laplace_nle=75.552449, bic_nle=147.879064, noise=[-1.0628633])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.355431, output_variance=0.752233)), nll=68.864358, laplace_nle=75.552446, bic_nle=147.879064, noise=[-1.06286323])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.136803, period=-2.247277, output_variance=-2.020101)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.454061, output_variance=-0.318001, alpha=-1.792840)) ]), nll=43.252364, laplace_nle=67.344094, bic_nle=116.955770, noise=[-1.68718652])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.992405, period=-2.101339, output_variance=-0.035207)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.452633, output_variance=-0.378409, alpha=-1.591378)) ]), nll=44.387854, laplace_nle=14785719952.956734, bic_nle=114.151578, noise=[-1.66470007])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.272318, period=0.498675, output_variance=1.645716)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.805107, output_variance=-1.838285, alpha=-2.904663)) ]), nll=42.468705, laplace_nle=1967534.927447, bic_nle=110.313279, noise=[-1.90073362])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.073433, period=-2.342506, output_variance=0.235549)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.213864, output_variance=-0.584753, alpha=-1.967426)) ]), nll=41.624944, laplace_nle=73513217106.148758, bic_nle=108.625757, noise=[-1.64297706])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.845225, output_variance=1.756719)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.723991, output_variance=-1.871069, alpha=-3.074289)) ]), nll=42.476392, laplace_nle=2196766.573127, bic_nle=105.253478, noise=[-1.89817291])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.845228, output_variance=-0.872240)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.723990, output_variance=0.757888, alpha=-3.074281)) ]), nll=42.476392, laplace_nle=2196754.082783, bic_nle=105.253478, noise=[-1.89817053])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.568622, output_variance=-0.343202, alpha=-1.673409)), nll=44.626339, laplace_nle=55.465930, bic_nle=104.478199, noise=[-1.69362685])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.568621, output_variance=-0.343201, alpha=-1.673412)), nll=44.626339, laplace_nle=55.465927, bic_nle=104.478199, noise=[-1.69362679])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.517177, output_variance=0.275204)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.228950, output_variance=-1.136405, alpha=16.783463)) ]), nll=37.025366, laplace_nle=54.584036, bic_nle=99.426602, noise=[-1.66383142])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.546556, period=-2.248612, output_variance=3.205511)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.776393, output_variance=-3.459246, alpha=-0.009897)) ]), nll=34.857026, laplace_nle=118830468677.932983, bic_nle=95.089921, noise=[-1.5861495])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.546556, period=-2.248612, output_variance=-1.356324)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.776415, output_variance=1.102573, alpha=-0.009769)) ]), nll=34.857026, laplace_nle=118768259773.162628, bic_nle=95.089921, noise=[-1.58614909])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-4.789118, output_variance=-2.975374)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341447, lengthscale=-3.322599, location=-1.154328)) ]), nll=20.424514, laplace_nle=39.519598, bic_nle=61.149724, noise=[-4.84385946])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.439052, output_variance=0.150625, alpha=2.779849)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-5.272808, output_variance=-4.278326, alpha=-1.624773)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341460, lengthscale=-4.207578, location=-1.046944)) ]) ]), nll=-43.418001, laplace_nle=-16.648286, bic_nle=-41.159438, noise=[-20.14757438])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.551889, output_variance=0.035193, alpha=3.613758)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-5.216018, output_variance=-4.228200, alpha=-1.999615)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341488, lengthscale=-4.257731, location=-1.047232)) ]) ]), nll=-43.506770, laplace_nle=-17.417110, bic_nle=-41.336975, noise=[-10.6559617])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.042107, period=-1.726976, output_variance=-7.348266)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.094580, output_variance=-3.704368, alpha=-4.161409)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341648, lengthscale=-4.781724, location=-1.054208)) ]) ]), nll=-44.392059, laplace_nle=-21.010696, bic_nle=-43.107554, noise=[-8.54054972])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.272174, output_variance=0.642525)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.978956, output_variance=-4.022245, alpha=-3.143534)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341442, lengthscale=-4.463641, location=-1.107973)) ]) ]), nll=-41.969481, laplace_nle=nan, bic_nle=-43.337571, noise=[-7.77492138])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.463588, output_variance=0.210179)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.878362, output_variance=-4.005675, alpha=-3.166075)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341442, lengthscale=-4.480210, location=-1.108084)) ]) ]), nll=-42.637518, laplace_nle=nan, bic_nle=-44.673645, noise=[-6.82854984])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.490146, output_variance=0.185592)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-5.186515, output_variance=-4.188280, alpha=-2.249385)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341451, lengthscale=-4.297614, location=-1.047135)) ]) ]), nll=-43.516233, laplace_nle=39790.515396, bic_nle=-46.431075, noise=[-8.09500768])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.343965, lengthscale=-3.345694, location=-1.054144)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.959441, period=-1.556811, output_variance=-2.831894)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.165575, output_variance=-2.310821, alpha=-4.148650)) ]) ]), nll=-43.956495, laplace_nle=-16.676593, bic_nle=-47.311599, noise=[-7.02945538])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.352545, lengthscale=-3.602715, location=-1.045694)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.890834, period=-0.627118, output_variance=-3.192875)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.163233, output_variance=-2.496669, alpha=-4.385251)) ]) ]), nll=-44.899981, laplace_nle=nan, bic_nle=-49.198572, noise=[-7.97681906])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.662294, output_variance=-5.063262, alpha=-4.466954)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.922020, output_variance=-4.015469, alpha=0.258981)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341702, lengthscale=-6.412731, location=-1.054342)) ]) ]), nll=-45.030633, laplace_nle=nan, bic_nle=-49.459876, noise=[-14.48951508])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.398496, output_variance=-5.981068, alpha=-3.033321)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341461, lengthscale=-6.619349, location=-1.054290)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.659763, lengthscale=3.307942, location=-2.409747)) ]) ]), nll=-45.424163, laplace_nle=nan, bic_nle=-50.246935, noise=[-11.98246474])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.299765, output_variance=-4.347921, alpha=-3.267602)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=0.593639, lengthscale=-5.077129, location=-1.105913)) ]), nll=-38.082471, laplace_nle=-1995.578124, bic_nle=-50.789074, noise=[-4.50493685])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.327262, output_variance=-6.547223, alpha=-3.591922)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=4.946212, output_variance=-2.814042)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341441, lengthscale=-7.368322, location=-1.054100)) ]) ]), nll=-43.880293, laplace_nle=nan, bic_nle=-52.234368, noise=[-6.76483166])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-8.127996, lengthscale=-3.707209, location=-1.054289)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-6.249760, output_variance=-2.738911, alpha=-4.943472)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=2.479260, output_variance=-0.261045, alpha=-1.392482)) ]) ]), nll=-46.516456, laplace_nle=nan, bic_nle=-52.431521, noise=[-8.91809348])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.860501, output_variance=-7.677082, alpha=-2.905763)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.554370, output_variance=-4.944676)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341450, lengthscale=-8.187965, location=-1.054302)) ]) ]), nll=-44.863265, laplace_nle=nan, bic_nle=-54.200314, noise=[-9.29863639])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.258312, output_variance=0.173379, alpha=-3.605461)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.230051, lengthscale=-0.660199, location=-1.107295)) ]), nll=-40.218097, laplace_nle=-19.142705, bic_nle=-55.060326, noise=[-4.98044086])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=4.019395, period=-1.619460, output_variance=-0.130599)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.158487, output_variance=-3.758387, alpha=-3.408500)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341725, lengthscale=-4.727782, location=-1.105940)) ]), nll=-45.509750, laplace_nle=nan, bic_nle=-55.493284, noise=[-9.01605464])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.838642, output_variance=-4.084342, alpha=-4.157309)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.342294, lengthscale=-4.402395, location=-1.045645)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.209954, lengthscale=0.736913, location=-5.927115)) ]), nll=-45.716748, laplace_nle=nan, bic_nle=-55.907279, noise=[-8.35156507])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.373539, period=-2.144129, output_variance=-1.257857)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.066973, output_variance=-3.075115, alpha=-4.146933)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341807, lengthscale=-5.411136, location=-1.105940)) ]), nll=-46.104248, laplace_nle=nan, bic_nle=-56.682279, noise=[-8.93622661])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.379351, lengthscale=-3.875914, location=-1.106035)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.474978, output_variance=-2.980764, alpha=-4.226384)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.890035, output_variance=-1.667117, alpha=0.316398)) ]) ]), nll=-49.343172, laplace_nle=nan, bic_nle=-58.084953, noise=[-7.83045765])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.344775, lengthscale=-4.325028, location=-1.106089)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.304611, output_variance=-3.286872, alpha=-4.372377)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.721047, lengthscale=3.535799, location=0.226364)) ]) ]), nll=-49.413521, laplace_nle=nan, bic_nle=-58.225651, noise=[-7.43791128])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.933522, lengthscale=-4.143928, location=-1.054293)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.409045, output_variance=-3.072866, alpha=-4.384580)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=2.491206, output_variance=-0.828606, alpha=2.470894)) ]) ]), nll=-49.463298, laplace_nle=nan, bic_nle=-58.325205, noise=[-9.88045686])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.808877, lengthscale=-4.021855, location=-1.105984)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.331200, output_variance=-3.020778, alpha=-4.233109)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-1.479250, lengthscale=2.560708, location=0.777151)) ]) ]), nll=-49.506947, laplace_nle=nan, bic_nle=-58.412504, noise=[-8.06562907])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.972167, output_variance=-3.183963, alpha=-5.603219)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.376381, output_variance=-0.699587, alpha=-3.416217)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341798, lengthscale=-5.302279, location=-1.054279)) ]), nll=-47.677715, laplace_nle=nan, bic_nle=-59.829214, noise=[-8.19626141])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.450617, lengthscale=-2.895026, location=-1.106052)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.428780, output_variance=-2.119192, alpha=-3.733579)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-1.837081, lengthscale=1.743763, location=-0.496808)) ]) ]), nll=-50.339793, laplace_nle=nan, bic_nle=-60.078195, noise=[-7.69437033])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.349348, lengthscale=-3.763844, location=-1.054255)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.660788, output_variance=-2.925288, alpha=-4.083701)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.294059, output_variance=-2.469890, alpha=2.290043)) ]) ]), nll=-50.659508, laplace_nle=-23.463922, bic_nle=-60.717626, noise=[-7.71980095])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.830434, lengthscale=-3.572828, location=-1.106003)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.191111, output_variance=-0.661036)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.235414, output_variance=-2.670689, alpha=-3.902104)) ]) ]), nll=-48.560355, laplace_nle=nan, bic_nle=-61.594493, noise=[-8.12837555])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.782840, output_variance=-1.378710, alpha=-5.101133)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.351338, lengthscale=-2.863135, location=-1.054122)) ]), nll=-43.729084, laplace_nle=-23.098676, bic_nle=-62.082298, noise=[-6.8172666])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-9.369770, lengthscale=-2.153790, location=-1.028481)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.772679, output_variance=-1.459105, alpha=-3.709379)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.061339, lengthscale=0.950999, location=-1.155912)) ]) ]), nll=-51.490409, laplace_nle=nan, bic_nle=-62.379428, noise=[-9.0675927])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.295807, output_variance=-2.360020, alpha=-3.722323)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-5.260021, lengthscale=-3.243203, location=-1.105983)) ]), nll=-44.058317, laplace_nle=nan, bic_nle=-62.740765, noise=[-7.34635958])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.419010, lengthscale=-4.082340, location=-1.105979)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.999226, output_variance=-1.400972)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.514204, output_variance=-3.080142, alpha=-4.354265)) ]) ]), nll=-49.298788, laplace_nle=nan, bic_nle=-63.071358, noise=[-8.08894411])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.807511, output_variance=-2.904739, alpha=-4.075239)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.003999, output_variance=-1.856170, alpha=0.766353)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341450, lengthscale=-5.581155, location=-1.054064)) ]), nll=-49.544452, laplace_nle=nan, bic_nle=-63.562688, noise=[-6.68196442])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.220391, output_variance=-4.741920, alpha=-3.998590)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.600899, lengthscale=-5.777912, location=-1.045698)) ]), nll=-44.768064, laplace_nle=nan, bic_nle=-64.160258, noise=[-7.92888431])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.350044, lengthscale=-4.224075, location=-1.106017)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.670749, output_variance=-2.508149)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.470664, output_variance=-3.258963, alpha=-4.289712)) ]) ]), nll=-50.101683, laplace_nle=nan, bic_nle=-64.677149, noise=[-7.75124384])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.207292, output_variance=-3.665113, alpha=-3.851005)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.660392, lengthscale=-4.623068, location=-1.045768)) ]), nll=-45.042650, laplace_nle=-21.634815, bic_nle=-64.709430, noise=[-8.17212625])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.040020, output_variance=-3.627788, alpha=-4.509550)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341439, lengthscale=-4.858095, location=-1.054272)) ]), nll=-45.204133, laplace_nle=-23.624492, bic_nle=-65.032398, noise=[-8.23206415])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.345603, lengthscale=-5.123076, location=-1.105947)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.658124, output_variance=-3.435922)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.319594, output_variance=-3.971023, alpha=-4.657510)) ]) ]), nll=-50.812899, laplace_nle=nan, bic_nle=-66.099581, noise=[-8.56305868])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.156696, output_variance=-3.659768, alpha=-4.715127)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.084779, output_variance=-0.031979, alpha=0.754073)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.345173, lengthscale=-4.829849, location=-1.105940)) ]), nll=-51.132418, laplace_nle=nan, bic_nle=-66.738619, noise=[-9.48454013])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.146089, output_variance=-0.348872)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.229336, output_variance=-3.394018, alpha=-5.099465)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341861, lengthscale=-5.092287, location=-1.045752)) ]), nll=-51.199476, laplace_nle=-1500931.867883, bic_nle=-71.947909, noise=[-7.91575322])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.447156, output_variance=0.220456)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.278590, output_variance=-3.817633, alpha=-4.334297)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.347880, lengthscale=-4.674691, location=-1.105937)) ]), nll=-51.224782, laplace_nle=-23198192.545786, bic_nle=-71.998521, noise=[-9.23695547])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.603438, output_variance=-0.092461)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.497264, output_variance=-3.720250, alpha=-4.250738)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.366205, lengthscale=-4.790399, location=-1.105932)) ]), nll=-52.054932, laplace_nle=nan, bic_nle=-73.658822, noise=[-10.57165994])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.003689, output_variance=-0.311478)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.647778, output_variance=-3.577475, alpha=-4.555002)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.358641, lengthscale=-4.925610, location=-1.045687)) ]), nll=-53.483565, laplace_nle=-113867887.831268, bic_nle=-76.516087, noise=[-10.10722073])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.589863, output_variance=-4.179031, alpha=-5.052934)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341457, lengthscale=-4.306869, location=-1.189521)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.615951, lengthscale=-2.064708, location=-1.009260)) ]), nll=-93.075125, laplace_nle=nan, bic_nle=-150.624034, noise=[-4.58185263])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.181558, output_variance=-4.828231, alpha=-5.082611)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341564, lengthscale=-3.657777, location=-1.226417)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-1.802682, lengthscale=-3.490671, location=-0.995083)) ]), nll=-103.296889, laplace_nle=66340.342822, bic_nle=-171.067562, noise=[-6.8903243])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.092376, output_variance=-4.466907, alpha=-4.862188)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341600, lengthscale=-4.019137, location=-0.994413)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.816764, lengthscale=-2.702102, location=-1.223007)) ]), nll=-103.637179, laplace_nle=-20894.076876, bic_nle=-171.748141, noise=[-7.31938161])

%%%%% Level 3 %%%%%

ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341600, lengthscale=-3.880168, location=-0.999059)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.860589, lengthscale=-2.606959, location=-1.082186)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.996074, period=-2.000672, output_variance=0.484205)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.092318, output_variance=-4.467510, alpha=-4.862446)) ]) ]), nll=618.527726, laplace_nle=nan, bic_nle=1287.807190, noise=[-3.17813049])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.759039, period=-2.000665, output_variance=-0.297574)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341600, lengthscale=-3.998215, location=-0.999311)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.823410, lengthscale=-2.687827, location=-1.210710)) ]), nll=519.452511, laplace_nle=nan, bic_nle=1074.431239, noise=[-3.1779955])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.325030, lengthscale=-3.913773, location=-0.873939)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.927824, lengthscale=-2.724369, location=-1.270226)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.075701, period=-1.982652, output_variance=1.863454)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.132245, output_variance=-4.330414, alpha=-4.815037)) ]) ]), nll=194.153577, laplace_nle=nan, bic_nle=439.058892, noise=[-3.10083131])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.569130, period=-3.015290, output_variance=-9.842357)), nll=156.985329, laplace_nle=nan, bic_nle=329.196179, noise=[-0.4377744])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.044309, period=-2.122713, output_variance=-2.308993)), nll=155.960523, laplace_nle=nan, bic_nle=327.146567, noise=[-0.47115576])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-10.681342, lengthscale=1.083023, location=-1.041383)), nll=154.485898, laplace_nle=161.237995, bic_nle=324.197318, noise=[-0.46000447])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-12.210354, lengthscale=1.083023, location=-1.041383)), nll=154.485898, laplace_nle=161.237952, bic_nle=324.197318, noise=[-0.46000447])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.040579, period=-0.475079, output_variance=-1.493489)), nll=153.311524, laplace_nle=164.631330, bic_nle=321.848570, noise=[-0.47668556])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-3.458235, period=-2.011732, output_variance=-0.437374)), nll=144.735119, laplace_nle=165.447395, bic_nle=304.695760, noise=[-1.40649801])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-2.983055, period=-3.144292, output_variance=-1.280935)), nll=122.623778, laplace_nle=nan, bic_nle=260.473078, noise=[-0.71423578])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.282685, period=-2.900729, output_variance=-0.708333)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.300981, lengthscale=-3.270184, location=-1.127967)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-3.183932, lengthscale=-2.360937, location=-0.972962)) ]), nll=106.336183, laplace_nle=nan, bic_nle=248.198583, noise=[-1.40896107])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.119368, period=-3.141010, output_variance=-0.056881)), nll=97.060316, laplace_nle=114.520022, bic_nle=209.346153, noise=[-0.95389575])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-1.153704, period=-3.141113, output_variance=-0.073066)), nll=96.612983, laplace_nle=114.323179, bic_nle=208.451488, noise=[-1.04192812])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.978947, lengthscale=-0.154009, location=-1.491879)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-8.379528, lengthscale=-1.139761, location=-0.690233)) ]), nll=68.420810, laplace_nle=84.604661, bic_nle=162.217489, noise=[-1.00983644])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.691911, output_variance=-4.687206)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.339663, lengthscale=-0.169112, location=-75.455333)) ]), nll=68.932813, laplace_nle=nan, bic_nle=158.166322, noise=[-1.09872163])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.364828, output_variance=-3.417669)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.322324, lengthscale=0.171439, location=-77.147258)) ]), nll=68.906282, laplace_nle=nan, bic_nle=158.113258, noise=[-1.06270129])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.053142, output_variance=-1.860711, alpha=8.535154)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.353557, lengthscale=-3.009501, location=-0.551660)) ]), nll=64.211709, laplace_nle=77.526819, bic_nle=153.799287, noise=[-1.07039812])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.353936, output_variance=0.755275, alpha=9.252901)), nll=68.864503, laplace_nle=nan, bic_nle=152.954527, noise=[-1.0629586])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.425643, output_variance=-0.091215, alpha=0.259209)), nll=68.433812, laplace_nle=77.170935, bic_nle=152.093145, noise=[-1.10009848])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.425643, output_variance=-0.091215, alpha=0.259211)), nll=68.433812, laplace_nle=77.170934, bic_nle=152.093145, noise=[-1.10009847])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.693913, output_variance=-0.210953)), nll=68.912058, laplace_nle=76.408635, bic_nle=147.974464, noise=[-1.09886086])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-1.693913, output_variance=-0.210953)), nll=68.912058, laplace_nle=76.408635, bic_nle=147.974464, noise=[-1.09886087])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.355430, output_variance=0.752233)), nll=68.864358, laplace_nle=75.552449, bic_nle=147.879064, noise=[-1.0628633])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.355431, output_variance=0.752233)), nll=68.864358, laplace_nle=75.552446, bic_nle=147.879064, noise=[-1.06286323])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=-0.136803, period=-2.247277, output_variance=-2.020101)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.454061, output_variance=-0.318001, alpha=-1.792840)) ]), nll=43.252364, laplace_nle=67.344094, bic_nle=116.955770, noise=[-1.68718652])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.992405, period=-2.101339, output_variance=-0.035207)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.452633, output_variance=-0.378409, alpha=-1.591378)) ]), nll=44.387854, laplace_nle=14785719952.956734, bic_nle=114.151578, noise=[-1.66470007])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.272318, period=0.498675, output_variance=1.645716)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.805107, output_variance=-1.838285, alpha=-2.904663)) ]), nll=42.468705, laplace_nle=1967534.927447, bic_nle=110.313279, noise=[-1.90073362])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=1.073433, period=-2.342506, output_variance=0.235549)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.213864, output_variance=-0.584753, alpha=-1.967426)) ]), nll=41.624944, laplace_nle=73513217106.148758, bic_nle=108.625757, noise=[-1.64297706])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.845225, output_variance=1.756719)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.723991, output_variance=-1.871069, alpha=-3.074289)) ]), nll=42.476392, laplace_nle=2196766.573127, bic_nle=105.253478, noise=[-1.89817291])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.845228, output_variance=-0.872240)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.723990, output_variance=0.757888, alpha=-3.074281)) ]), nll=42.476392, laplace_nle=2196754.082783, bic_nle=105.253478, noise=[-1.89817053])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.568622, output_variance=-0.343202, alpha=-1.673409)), nll=44.626339, laplace_nle=55.465930, bic_nle=104.478199, noise=[-1.69362685])
ScoredKernel(k_opt=MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.568621, output_variance=-0.343201, alpha=-1.673412)), nll=44.626339, laplace_nle=55.465927, bic_nle=104.478199, noise=[-1.69362679])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.517177, output_variance=0.275204)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.228950, output_variance=-1.136405, alpha=16.783463)) ]), nll=37.025366, laplace_nle=54.584036, bic_nle=99.426602, noise=[-1.66383142])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.546556, period=-2.248612, output_variance=3.205511)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.776393, output_variance=-3.459246, alpha=-0.009897)) ]), nll=34.857026, laplace_nle=118830468677.932983, bic_nle=95.089921, noise=[-1.5861495])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.546556, period=-2.248612, output_variance=-1.356324)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-1.776415, output_variance=1.102573, alpha=-0.009769)) ]), nll=34.857026, laplace_nle=118768259773.162628, bic_nle=95.089921, noise=[-1.58614909])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-4.789118, output_variance=-2.975374)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341447, lengthscale=-3.322599, location=-1.154328)) ]), nll=20.424514, laplace_nle=39.519598, bic_nle=61.149724, noise=[-4.84385946])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.439052, output_variance=0.150625, alpha=2.779849)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-5.272808, output_variance=-4.278326, alpha=-1.624773)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341460, lengthscale=-4.207578, location=-1.046944)) ]) ]), nll=-43.418001, laplace_nle=-16.648286, bic_nle=-41.159438, noise=[-20.14757438])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.551889, output_variance=0.035193, alpha=3.613758)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-5.216018, output_variance=-4.228200, alpha=-1.999615)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341488, lengthscale=-4.257731, location=-1.047232)) ]) ]), nll=-43.506770, laplace_nle=-17.417110, bic_nle=-41.336975, noise=[-10.6559617])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=0.042107, period=-1.726976, output_variance=-7.348266)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.094580, output_variance=-3.704368, alpha=-4.161409)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341648, lengthscale=-4.781724, location=-1.054208)) ]) ]), nll=-44.392059, laplace_nle=-21.010696, bic_nle=-43.107554, noise=[-8.54054972])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.272174, output_variance=0.642525)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.978956, output_variance=-4.022245, alpha=-3.143534)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341442, lengthscale=-4.463641, location=-1.107973)) ]) ]), nll=-41.969481, laplace_nle=nan, bic_nle=-43.337571, noise=[-7.77492138])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.463588, output_variance=0.210179)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.878362, output_variance=-4.005675, alpha=-3.166075)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341442, lengthscale=-4.480210, location=-1.108084)) ]) ]), nll=-42.637518, laplace_nle=nan, bic_nle=-44.673645, noise=[-6.82854984])
ScoredKernel(k_opt=SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.490146, output_variance=0.185592)), ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-5.186515, output_variance=-4.188280, alpha=-2.249385)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341451, lengthscale=-4.297614, location=-1.047135)) ]) ]), nll=-43.516233, laplace_nle=39790.515396, bic_nle=-46.431075, noise=[-8.09500768])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.343965, lengthscale=-3.345694, location=-1.054144)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.959441, period=-1.556811, output_variance=-2.831894)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.165575, output_variance=-2.310821, alpha=-4.148650)) ]) ]), nll=-43.956495, laplace_nle=-16.676593, bic_nle=-47.311599, noise=[-7.02945538])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.352545, lengthscale=-3.602715, location=-1.045694)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.890834, period=-0.627118, output_variance=-3.192875)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.163233, output_variance=-2.496669, alpha=-4.385251)) ]) ]), nll=-44.899981, laplace_nle=nan, bic_nle=-49.198572, noise=[-7.97681906])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.662294, output_variance=-5.063262, alpha=-4.466954)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-2.922020, output_variance=-4.015469, alpha=0.258981)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341702, lengthscale=-6.412731, location=-1.054342)) ]) ]), nll=-45.030633, laplace_nle=nan, bic_nle=-49.459876, noise=[-14.48951508])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.398496, output_variance=-5.981068, alpha=-3.033321)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341461, lengthscale=-6.619349, location=-1.054290)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.659763, lengthscale=3.307942, location=-2.409747)) ]) ]), nll=-45.424163, laplace_nle=nan, bic_nle=-50.246935, noise=[-11.98246474])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.299765, output_variance=-4.347921, alpha=-3.267602)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=0.593639, lengthscale=-5.077129, location=-1.105913)) ]), nll=-38.082471, laplace_nle=-1995.578124, bic_nle=-50.789074, noise=[-4.50493685])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.327262, output_variance=-6.547223, alpha=-3.591922)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=4.946212, output_variance=-2.814042)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341441, lengthscale=-7.368322, location=-1.054100)) ]) ]), nll=-43.880293, laplace_nle=nan, bic_nle=-52.234368, noise=[-6.76483166])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-8.127996, lengthscale=-3.707209, location=-1.054289)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-6.249760, output_variance=-2.738911, alpha=-4.943472)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=2.479260, output_variance=-0.261045, alpha=-1.392482)) ]) ]), nll=-46.516456, laplace_nle=nan, bic_nle=-52.431521, noise=[-8.91809348])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.860501, output_variance=-7.677082, alpha=-2.905763)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.554370, output_variance=-4.944676)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341450, lengthscale=-8.187965, location=-1.054302)) ]) ]), nll=-44.863265, laplace_nle=nan, bic_nle=-54.200314, noise=[-9.29863639])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.258312, output_variance=0.173379, alpha=-3.605461)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.230051, lengthscale=-0.660199, location=-1.107295)) ]), nll=-40.218097, laplace_nle=-19.142705, bic_nle=-55.060326, noise=[-4.98044086])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=4.019395, period=-1.619460, output_variance=-0.130599)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.158487, output_variance=-3.758387, alpha=-3.408500)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341725, lengthscale=-4.727782, location=-1.105940)) ]), nll=-45.509750, laplace_nle=nan, bic_nle=-55.493284, noise=[-9.01605464])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.838642, output_variance=-4.084342, alpha=-4.157309)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.342294, lengthscale=-4.402395, location=-1.045645)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.209954, lengthscale=0.736913, location=-5.927115)) ]), nll=-45.716748, laplace_nle=nan, bic_nle=-55.907279, noise=[-8.35156507])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpPeriodicKernel(lengthscale=3.373539, period=-2.144129, output_variance=-1.257857)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.066973, output_variance=-3.075115, alpha=-4.146933)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341807, lengthscale=-5.411136, location=-1.105940)) ]), nll=-46.104248, laplace_nle=nan, bic_nle=-56.682279, noise=[-8.93622661])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.379351, lengthscale=-3.875914, location=-1.106035)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.474978, output_variance=-2.980764, alpha=-4.226384)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.890035, output_variance=-1.667117, alpha=0.316398)) ]) ]), nll=-49.343172, laplace_nle=nan, bic_nle=-58.084953, noise=[-7.83045765])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.344775, lengthscale=-4.325028, location=-1.106089)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.304611, output_variance=-3.286872, alpha=-4.372377)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.721047, lengthscale=3.535799, location=0.226364)) ]) ]), nll=-49.413521, laplace_nle=nan, bic_nle=-58.225651, noise=[-7.43791128])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.933522, lengthscale=-4.143928, location=-1.054293)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.409045, output_variance=-3.072866, alpha=-4.384580)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=2.491206, output_variance=-0.828606, alpha=2.470894)) ]) ]), nll=-49.463298, laplace_nle=nan, bic_nle=-58.325205, noise=[-9.88045686])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.808877, lengthscale=-4.021855, location=-1.105984)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.331200, output_variance=-3.020778, alpha=-4.233109)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-1.479250, lengthscale=2.560708, location=0.777151)) ]) ]), nll=-49.506947, laplace_nle=nan, bic_nle=-58.412504, noise=[-8.06562907])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.972167, output_variance=-3.183963, alpha=-5.603219)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.376381, output_variance=-0.699587, alpha=-3.416217)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341798, lengthscale=-5.302279, location=-1.054279)) ]), nll=-47.677715, laplace_nle=nan, bic_nle=-59.829214, noise=[-8.19626141])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.450617, lengthscale=-2.895026, location=-1.106052)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.428780, output_variance=-2.119192, alpha=-3.733579)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-1.837081, lengthscale=1.743763, location=-0.496808)) ]) ]), nll=-50.339793, laplace_nle=nan, bic_nle=-60.078195, noise=[-7.69437033])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.349348, lengthscale=-3.763844, location=-1.054255)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.660788, output_variance=-2.925288, alpha=-4.083701)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=0.294059, output_variance=-2.469890, alpha=2.290043)) ]) ]), nll=-50.659508, laplace_nle=-23.463922, bic_nle=-60.717626, noise=[-7.71980095])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.830434, lengthscale=-3.572828, location=-1.106003)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=1.191111, output_variance=-0.661036)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.235414, output_variance=-2.670689, alpha=-3.902104)) ]) ]), nll=-48.560355, laplace_nle=nan, bic_nle=-61.594493, noise=[-8.12837555])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-3.782840, output_variance=-1.378710, alpha=-5.101133)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.351338, lengthscale=-2.863135, location=-1.054122)) ]), nll=-43.729084, laplace_nle=-23.098676, bic_nle=-62.082298, noise=[-6.8172666])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-9.369770, lengthscale=-2.153790, location=-1.028481)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.772679, output_variance=-1.459105, alpha=-3.709379)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.061339, lengthscale=0.950999, location=-1.155912)) ]) ]), nll=-51.490409, laplace_nle=nan, bic_nle=-62.379428, noise=[-9.0675927])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.295807, output_variance=-2.360020, alpha=-3.722323)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-5.260021, lengthscale=-3.243203, location=-1.105983)) ]), nll=-44.058317, laplace_nle=nan, bic_nle=-62.740765, noise=[-7.34635958])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.419010, lengthscale=-4.082340, location=-1.105979)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.999226, output_variance=-1.400972)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.514204, output_variance=-3.080142, alpha=-4.354265)) ]) ]), nll=-49.298788, laplace_nle=nan, bic_nle=-63.071358, noise=[-8.08894411])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.807511, output_variance=-2.904739, alpha=-4.075239)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.003999, output_variance=-1.856170, alpha=0.766353)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341450, lengthscale=-5.581155, location=-1.054064)) ]), nll=-49.544452, laplace_nle=nan, bic_nle=-63.562688, noise=[-6.68196442])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.220391, output_variance=-4.741920, alpha=-3.998590)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.600899, lengthscale=-5.777912, location=-1.045698)) ]), nll=-44.768064, laplace_nle=nan, bic_nle=-64.160258, noise=[-7.92888431])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.350044, lengthscale=-4.224075, location=-1.106017)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.670749, output_variance=-2.508149)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.470664, output_variance=-3.258963, alpha=-4.289712)) ]) ]), nll=-50.101683, laplace_nle=nan, bic_nle=-64.677149, noise=[-7.75124384])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.207292, output_variance=-3.665113, alpha=-3.851005)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-4.660392, lengthscale=-4.623068, location=-1.045768)) ]), nll=-45.042650, laplace_nle=-21.634815, bic_nle=-64.709430, noise=[-8.17212625])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.040020, output_variance=-3.627788, alpha=-4.509550)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341439, lengthscale=-4.858095, location=-1.054272)) ]), nll=-45.204133, laplace_nle=-23.624492, bic_nle=-65.032398, noise=[-8.23206415])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.345603, lengthscale=-5.123076, location=-1.105947)), SumKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.658124, output_variance=-3.435922)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.319594, output_variance=-3.971023, alpha=-4.657510)) ]) ]), nll=-50.812899, laplace_nle=nan, bic_nle=-66.099581, noise=[-8.56305868])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.156696, output_variance=-3.659768, alpha=-4.715127)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-0.084779, output_variance=-0.031979, alpha=0.754073)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.345173, lengthscale=-4.829849, location=-1.105940)) ]), nll=-51.132418, laplace_nle=nan, bic_nle=-66.738619, noise=[-9.48454013])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.146089, output_variance=-0.348872)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.229336, output_variance=-3.394018, alpha=-5.099465)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341861, lengthscale=-5.092287, location=-1.045752)) ]), nll=-51.199476, laplace_nle=-1500931.867883, bic_nle=-71.947909, noise=[-7.91575322])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.447156, output_variance=0.220456)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.278590, output_variance=-3.817633, alpha=-4.334297)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.347880, lengthscale=-4.674691, location=-1.105937)) ]), nll=-51.224782, laplace_nle=-23198192.545786, bic_nle=-71.998521, noise=[-9.23695547])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=0.603438, output_variance=-0.092461)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.497264, output_variance=-3.720250, alpha=-4.250738)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.366205, lengthscale=-4.790399, location=-1.105932)) ]), nll=-52.054932, laplace_nle=nan, bic_nle=-73.658822, noise=[-10.57165994])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=SqExpKernel(lengthscale=-0.003689, output_variance=-0.311478)), MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.647778, output_variance=-3.577475, alpha=-4.555002)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.358641, lengthscale=-4.925610, location=-1.045687)) ]), nll=-53.483565, laplace_nle=-113867887.831268, bic_nle=-76.516087, noise=[-10.10722073])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.589863, output_variance=-4.179031, alpha=-5.052934)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341457, lengthscale=-4.306869, location=-1.189521)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.615951, lengthscale=-2.064708, location=-1.009260)) ]), nll=-93.075125, laplace_nle=nan, bic_nle=-150.624034, noise=[-4.58185263])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.181558, output_variance=-4.828231, alpha=-5.082611)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341564, lengthscale=-3.657777, location=-1.226417)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-1.802682, lengthscale=-3.490671, location=-0.995083)) ]), nll=-103.296889, laplace_nle=66340.342822, bic_nle=-171.067562, noise=[-6.8903243])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.092376, output_variance=-4.466907, alpha=-4.862188)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341600, lengthscale=-4.019137, location=-0.994413)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.816764, lengthscale=-2.702102, location=-1.223007)) ]), nll=-103.637179, laplace_nle=-20894.076876, bic_nle=-171.748141, noise=[-7.31938161])
ScoredKernel(k_opt=ProductKernel([ MaskKernel(ndim=1, active_dimension=0, base_kernel=RQKernel(lengthscale=-4.579167, output_variance=-4.750202, alpha=-4.871953)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-7.341838, lengthscale=-3.736079, location=-1.028556)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-2.991049, lengthscale=-2.593092, location=-1.232117)), MaskKernel(ndim=1, active_dimension=0, base_kernel=LinKernel(offset=-0.403952, lengthscale=-0.120656, location=0.375543)) ]), nll=-110.403927, laplace_nle=nan, bic_nle=-175.131290, noise=[-7.27175583])
